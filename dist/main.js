/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _jsLang_ru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsLang/ru.js */ \"./src/jsLang/ru.js\");\n/* harmony import */ var _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jsLang/en.js */ \"./src/jsLang/en.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ ru: _jsLang_ru_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], en: _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] });\nconst addClass = ['', '', '', '', '', '', '', '', '', '', '', '', '', 'button__backspace', 'button__tab', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'button__caps', '', '', '', '', '', '', '', '', '', '', '', 'button__enter', 'button__shift', '', '', '', '', '', '', '', '', '', '', '', '', '', 'button__ctrl', '', '', 'button__space', '', 'button__ctrl', '', '', ''];\n\nlet shiftState = false;\nlet capsState = false;\nlet lang = localStorage.getItem('lang') || 'en';\nfunction addDiv() {\n    const body = document.querySelector('body')\n    let div = document.createElement('div');\n    div.classList.add('window');\n    body.append(div);\n    let div2 = document.createElement('div');\n    div2.classList.add('keyboard');\n    body.append(div2);\n    let div3 = document.createElement('div');\n    div3.classList.add('language');\n    body.append(div3);\n    addTextarea(div);\n    addKeyboard(div2);\n    addP(div3);\n\n}\naddDiv()\n\nfunction addTextarea(div) {\n    let textarea = document.createElement('textarea');\n    textarea.classList.add('window__input');\n    div.append(textarea);\n}\nfunction addKeyboard(div2) {\n    let divKeyboard = document.createElement('div');\n    divKeyboard.classList.add('keyboard__container');\n    div2.append(divKeyboard);\n    let divKeyboardCont = document.createElement('div');\n    divKeyboardCont.classList.add('keyboard__button');\n    divKeyboard.append(divKeyboardCont);\n    addButton(divKeyboardCont)\n}\nfunction addP(div3) {\n    let p = document.createElement('p');\n    p.innerHTML = 'Для переключения языка комбинация: Left Ctrl + Left Alt или кнопка EN/RU'\n    div3.append(p);\n}\nfunction addButton(divKeyboardCont) {\n    for (let i = 0; i < _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].length; i++) {\n        let button = document.createElement('button')\n        button.classList.add('button__key');\n        button.dataset.code = _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i].code;\n        if (_jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i].class !== '') {\n            button.classList.add(_jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i].class);\n\n        }\n        button.innerHTML = getButton(i)\n        divKeyboardCont.append(button)\n    }\n}\nfunction getButton(i) {\n\n    if (lang === 'en') {\n        if ((shiftState === true || capsState === true)) {\n            return _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i].shift;\n        } else {\n            return _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i].small;\n        }\n    }\n    if (lang === 'ru') {\n        if ((shiftState === true || capsState === true)) {\n            return _jsLang_ru_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].shift;\n        } else {\n            return _jsLang_ru_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][i].small;\n        }\n    }\n\n}\nfunction switchLang() {\n    if (lang === 'en') {\n        lang = 'ru'\n    } else {\n        lang = 'en'\n    }\n    localStorage.setItem('lang', lang);\n}\nfunction restart() {\n    let but = document.querySelectorAll(\"button\")\n    for (let i = 0; i < _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].length; i++) {\n        but[i].innerHTML = getButton(i)\n    }\n}\nlet inputText = document.createElement(\"textarea\");\nfunction getCodeClickButton(code) {\n    let index = 0;\n    for (let i = 0; i < _jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].length; i++) {\n        if (_jsLang_en_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][i].code === code) {\n            index = i;\n            break;\n        }\n    }\n    return getButton(index);\n}\n\nfunction addListeners() {\n    document.addEventListener('mouseup', (event) => onMouseUp(event));\n    document.addEventListener('keydown', (event) => onKeyDown(event));\n    document.addEventListener('keyup', (event) => onKeyUp(event));\n    document.addEventListener('mousedown', (event) => onMouseDown(event));\n}\naddListeners()\n\nfunction onMouseDown(event) {\n    let inputText = document.querySelector('textarea')\n    let code = '';\n    if (event.stopPropagation) {\n        event.stopPropagation();\n    }\n    inputText.focus();\n    if (event.target.tagName === 'BUTTON') {\n        code = event.target.dataset.code;\n        event.target.classList.add('active');\n    }\n    if (code !== '') {\n        if (code === 'ShiftLeft' || code === 'ShiftRight') {\n            let textarea = document.querySelector('textarea')\n            if (capsState === false) {\n                shiftState = true\n                restart()\n            }\n            if (capsState === true) {\n                shiftState = false\n                capsState = false\n                restart()\n            }\n        }\n        if (code === 'CapsLock') {\n            capsState = !capsState;\n            restart()\n        }\n        if ((event.code === 'ShiftLeft' && event.altKey) || (event.code === 'AltLeft' && event.shiftKey)) {\n            switchLang()\n            restart()\n        }\n        if (code === 'lang') {\n            switchLang()\n            restart()\n        }\n    }\n    event.preventDefault();\n    let cursorPos = inputText.selectionStart;\n    const left = inputText.value.slice(0, cursorPos);\n    const right = inputText.value.slice(cursorPos);\n    const fnButton = {\n        Tab: () => {\n            inputText.value = `${left}\\t${right}`;\n        },\n        ArrowLeft: () => {\n            cursorPos = cursorPos - 1 >= 0 ? cursorPos - 1 : 0;\n        },\n        ArrowRight: () => {\n            cursorPos += 1;\n        },\n        ArrowUp: () => {\n            let fromLeft = inputText.value.slice(0, cursorPos).match(/(\\n).*$(?!\\1)/g) || [[1]];\n            cursorPos -= fromLeft[0].length\n        },\n        ArrowDown: () => {\n            let fromLeft = inputText.value.slice(cursorPos).match(/^.*(\\n).*(?!\\1)/) || [[1]];\n            cursorPos += fromLeft[0].length\n        },\n        Enter: () => {\n            inputText.value = `${left}\\n${right}`;\n            cursorPos += 1;\n        },\n        Delete: () => {\n            inputText.value = `${left}${right.slice(1)}`;\n        },\n        Backspace: () => {\n            inputText.value = `${left.slice(0, -1)}${right}`;\n            cursorPos -= 1;\n        },\n        Space: () => {\n            inputText.value = `${left} ${right}`;\n            cursorPos += 1;\n        },\n        ShiftLeft: () => {\n            inputText.value = `${left}${right}`\n        },\n        ShiftRight: () => {\n            inputText.value = `${left}${right}`\n        },\n        CapsLock: () => {\n            inputText.value = `${left}${right}`\n        },\n        AltLeft: () => {\n            inputText.value = `${left} ${right}`;\n            cursorPos += 1;\n        },\n        ControlLeft: () => {\n            inputText.value = `${left}${right}`\n        },\n        ControlRight: () => {\n            inputText.value = `${left}${right}`\n        },\n        AltRight: () => {\n            inputText.value = `${left}${right}`\n        },\n        lang: () => {\n            inputText.value = `${left}${right}`\n        },\n    }\n\n    if (fnButton[code]) {\n        fnButton[code]();\n    } else if (code) {\n        cursorPos += 1;\n        console.log(code)\n        inputText.value = `${left}${getCodeClickButton(code) || ''}${right}`\n    }\n    inputText.setSelectionRange(cursorPos, cursorPos)\n}\nfunction onMouseUp(event) {\n    let code = '';\n    if (event.target.tagName === 'BUTTON') {\n        code = event.target.dataset.code;\n        event.target.classList.remove('active');\n\n    }\n    if (code === 'ShiftLeft' || code === 'ShiftRight') {\n        if (shiftState === false) {\n            shiftState = true\n            capsState = true\n            restart()\n        }\n        if (shiftState === true) {\n            shiftState = false\n            restart()\n        }\n    }\n}\nfunction onKeyDown(event) {\n    let inputText = document.querySelector('textarea')\n    if (event.stopPropagation) {\n        event.stopPropagation();\n    }\n    inputText.focus();\n\n    console.log(event)\n    console.log(lang)\n    let buto = document.querySelector(`button[data-code=${event.code}]`)\n    buto.classList.add('active');\n    if (event.type === \"keydown\") {\n        event.preventDefault();\n    }\n    if (event.code === 'ShiftLeft' || event.code === 'ShiftRight') {\n        if (capsState === false) {\n            shiftState = true\n            restart()\n        }\n        if (capsState === true) {\n            shiftState = false\n            capsState = false\n            restart()\n        }\n    }\n    //lang\n    if ((event.code === 'ShiftLeft' && event.altKey) || (event.code === 'AltLeft' && event.shiftKey)) {\n        switchLang()\n        restart()\n    }\n    if (event.code === 'CapsLock') {\n        capsState = !capsState;\n        restart()\n    }\n\n    //\n    event.preventDefault();\n    let cursorPos = inputText.selectionStart;\n    const left = inputText.value.slice(0, cursorPos);\n    const right = inputText.value.slice(cursorPos);\n    console.log(event)\n    const fnButton = {\n        Tab: () => {\n            inputText.value = `${left}\\t${right}`;\n        },\n        ArrowLeft: () => {\n            cursorPos = cursorPos - 1 >= 0 ? cursorPos - 1 : 0;\n        },\n        ArrowRight: () => {\n            cursorPos += 1;\n        },\n        ArrowUp: () => {\n            let fromLeft = inputText.value.slice(0, cursorPos).match(/(\\n).*$(?!\\1)/g) || [[1]];\n            cursorPos -= fromLeft[0].length\n        },\n        ArrowDown: () => {\n            let fromLeft = inputText.value.slice(cursorPos).match(/^.*(\\n).*(?!\\1)/) || [[1]];\n            cursorPos += fromLeft[0].length\n        },\n        Enter: () => {\n            inputText.value = `${left}\\n${right}`;\n            cursorPos += 1;\n        },\n        Delete: () => {\n            inputText.value = `${left}${right.slice(1)}`;\n        },\n        Backspace: () => {\n            inputText.value = `${left.slice(0, -1)}${right}`;\n            cursorPos -= 1;\n        },\n        Space: () => {\n            inputText.value = `${left} ${right}`;\n            cursorPos += 1;\n        },\n        ShiftLeft: () => {\n            inputText.value = `${left}${right}`\n        },\n        ShiftRight: () => {\n            inputText.value = `${left}${right}`\n        },\n        CapsLock: () => {\n            inputText.value = `${left}${right}`\n        },\n        AltLeft: () => {\n            inputText.value = `${left} ${right}`;\n            cursorPos += 1;\n        },\n        ControlLeft: () => {\n            inputText.value = `${left}${right}`\n        },\n        ControlRight: () => {\n            inputText.value = `${left}${right}`\n        },\n        AltRight: () => {\n            inputText.value = `${left}${right}`\n        },\n    }\n\n    if (fnButton[event.code]) {\n        fnButton[event.code]();\n    } else {\n        cursorPos += 1;\n        inputText.value = `${left}${getCodeClickButton(event.code) || ''}${right}`\n        console.log(event)\n    }\n    inputText.setSelectionRange(cursorPos, cursorPos)\n}\nfunction onKeyUp(event) {\n    let buto = document.querySelector(`button[data-code=${event.code}]`)\n    buto.classList.remove('active');\n    if (event.code === 'ShiftLeft' || event.code === 'ShiftRight') {\n        if (shiftState === false) {\n            shiftState = true\n            capsState = true\n            restart()\n        }\n        if (shiftState === true) {\n            shiftState = false\n            restart()\n        }\n    }\n\n}\n\n//# sourceURL=webpack://virtual-keyboard/./src/index.js?");

/***/ }),

/***/ "./src/jsLang/en.js":
/*!**************************!*\
  !*** ./src/jsLang/en.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([\n    {\n        small: '`',\n        shift: '~',\n        code: 'Backquote',\n        class: '',\n    },\n    {\n        small: '1',\n        shift: '!',\n        code: 'Digit1',\n        class: '',\n    },\n    {\n        small: '2',\n        shift: '@',\n        code: 'Digit2',\n        class: '',\n    },\n    {\n        small: '3',\n        shift: '#',\n        code: 'Digit3',\n        class: '',\n    },\n    {\n        small: '4',\n        shift: '$',\n        code: 'Digit4',\n        class: '',\n    },\n    {\n        small: '5',\n        shift: '%',\n        code: 'Digit5',\n        class: '',\n    },\n    {\n        small: '6',\n        shift: '^',\n        code: 'Digit6',\n        class: '',\n    },\n    {\n        small: '7',\n        shift: '&',\n        code: 'Digit7',\n        class: '',\n    },\n    {\n        small: '8',\n        shift: '*',\n        code: 'Digit8',\n        class: '',\n    },\n    {\n        small: '9',\n        shift: '(',\n        code: 'Digit9',\n        class: '',\n    },\n    {\n        small: '0',\n        shift: ')',\n        code: 'Digit0',\n        class: '',\n    },\n    {\n        small: '-',\n        shift: '_',\n        code: 'Minus',\n        class: '',\n    },\n    {\n        small: '=',\n        shift: '+',\n        code: 'Equal',\n        class: '',\n    },\n    {\n        small: 'Backspace',\n        shift: 'Backspace',\n        code: 'Backspace',\n        class: 'button__backspace',\n    },\n    {\n        small: 'Tab',\n        shift: 'Tab',\n        code: 'Tab',\n        class: 'button__tab',\n    },\n    {\n        small: 'q',\n        shift: 'Q',\n        code: 'KeyQ',\n        class: '',\n    },\n    {\n        small: 'w',\n        shift: 'W',\n        code: 'KeyW',\n        class: '',\n    },\n    {\n        small: 'e',\n        shift: 'E',\n        code: 'KeyE',\n        class: '',\n    },\n    {\n        small: 'r',\n        shift: 'R',\n        code: 'KeyR',\n        class: '',\n    },\n    {\n        small: 't',\n        shift: 'T',\n        code: 'KeyT',\n        class: '',\n    },\n    {\n        small: 'y',\n        shift: 'Y',\n        code: 'KeyY',\n        class: '',\n    },\n    {\n        small: 'u',\n        shift: 'U',\n        code: 'KeyU',\n        class: '',\n    },\n    {\n        small: 'i',\n        shift: 'I',\n        code: 'KeyI',\n        class: '',\n    },\n    {\n        small: 'o',\n        shift: 'O',\n        code: 'KeyO',\n        class: '',\n    },\n    {\n        small: 'p',\n        shift: 'P',\n        code: 'KeyP',\n        class: '',\n    },\n    {\n        small: '[',\n        shift: '{',\n        code: 'BracketLeft',\n        class: '',\n    },\n    {\n        small: ']',\n        shift: '}',\n        code: 'BracketRight',\n        class: '',\n    },\n    {\n        small: '\\\\',\n        shift: '|',\n        code: 'Backslash',\n        class: '',\n    },\n    {\n        small: 'Delete',\n        shift: 'Delete',\n        code: 'Delete',\n        class: '',\n    },\n\n\n    {\n        small: 'CapsLock',\n        shift: 'CapsLock',\n        code: 'CapsLock',\n        class: 'button__caps',\n    },\n    {\n        small: 'a',\n        shift: 'A',\n        code: 'KeyA',\n        class: '',\n    },\n    {\n        small: 's',\n        shift: 'S',\n        code: 'KeyS',\n        class: '',\n    },\n    {\n        small: 'd',\n        shift: 'D',\n        code: 'KeyD',\n        class: '',\n    },\n    {\n        small: 'f',\n        shift: 'F',\n        code: 'KeyF',\n        class: '',\n    },\n    {\n        small: 'g',\n        shift: 'G',\n        code: 'KeyG',\n        class: '',\n    },\n    {\n        small: 'h',\n        shift: 'H',\n        code: 'KeyH',\n        class: '',\n    },\n    {\n        small: 'j',\n        shift: 'J',\n        code: 'KeyJ',\n        class: '',\n    },\n    {\n        small: 'k',\n        shift: 'K',\n        code: 'KeyK',\n        class: '',\n    },\n    {\n        small: 'l',\n        shift: 'L',\n        code: 'KeyL',\n        class: '',\n    },\n    {\n        small: ';',\n        shift: ':',\n        code: 'Semicolon',\n        class: '',\n    },\n    {\n        small: \"'\",\n        shift: '\"',\n        code: 'Quote',\n        class: '',\n    },\n\n    {\n        small: 'Enter',\n        shift: 'Enter',\n        code: 'Enter',\n        class: 'button__enter',\n    },\n    {\n        small: 'Shift',\n        shift: 'Shift',\n        code: 'ShiftLeft',\n        class: 'button__shift',\n    },\n    {\n        small: '<',\n        shift: '>',\n        code: 'IntlBackslash',\n        class: '',\n    },\n    {\n        small: 'z',\n        shift: 'Z',\n        code: 'KeyZ',\n        class: '',\n    },\n    {\n        small: 'x',\n        shift: 'X',\n        code: 'KeyX',\n        class: '',\n    },\n    {\n        small: 'c',\n        shift: 'C',\n        code: 'KeyC',\n        class: '',\n    },\n    {\n        small: 'v',\n        shift: 'V',\n        code: 'KeyV',\n        class: '',\n    },\n    {\n        small: 'b',\n        shift: 'B',\n        code: 'KeyB',\n        class: '',\n    },\n    {\n        small: 'n',\n        shift: 'N',\n        code: 'KeyN',\n        class: '',\n    },\n    {\n        small: 'm',\n        shift: 'M',\n        code: 'KeyM',\n        class: '',\n    },\n    {\n        small: ',',\n        shift: '<',\n        code: 'Comma',\n        class: '',\n    },\n    {\n        small: '.',\n        shift: '>',\n        code: 'Period',\n        class: '',\n    },\n    {\n        small: '/',\n        shift: '?',\n        code: 'Slash',\n        class: '',\n    },\n    {\n        small: '&#9650;',\n        shift: '&#9650;',\n        code: 'ArrowUp',\n        class: '',\n    },\n    {\n        small: 'Shift',\n        shift: 'Shift',\n        code: 'ShiftRight',\n        class: '',\n    },\n    {\n        small: 'Ctrl',\n        shift: 'Ctrl',\n        code: 'ControlLeft',\n        class: 'button__ctrl',\n    },\n    {\n        small: 'EN',\n        shift: 'EN',\n        code: 'lang',\n        class: '',\n    },\n    {\n        small: 'Alt',\n        shift: 'Alt',\n        code: 'AltLeft',\n        class: '',\n    },\n    {\n        small: '&#8212;',\n        shift: '&#8212;',\n        code: 'Space',\n        class: 'button__space',\n    },\n    {\n        small: 'Alt',\n        shift: 'Alt',\n        code: 'AltRight',\n        class: '',\n    },\n    {\n        small: 'Ctrl',\n        shift: 'Ctrl',\n        code: 'ControlRight',\n        class: 'button__ctrl',\n    },\n    {\n        small: '&#9668;',\n        shift: '&#9668;',\n        code: 'ArrowLeft',\n        class: '',\n    },\n\n    {\n        small: '&#9660;',\n        shift: '&#9660;',\n        code: 'ArrowDown',\n        class: '',\n    },\n    {\n        small: '&#9658;',\n        shift: '&#9658;',\n        code: 'ArrowRight',\n        class: '',\n    },\n\n\n]);\n\n//# sourceURL=webpack://virtual-keyboard/./src/jsLang/en.js?");

/***/ }),

/***/ "./src/jsLang/ru.js":
/*!**************************!*\
  !*** ./src/jsLang/ru.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([\n    {\n        small: 'ё',\n        shift: 'Ё',\n        code: 'Backquote',\n        class: '',\n    },\n    {\n        small: '1',\n        shift: '!',\n        code: 'Digit1',\n        class: '',\n    },\n    {\n        small: '2',\n        shift: '\"',\n        code: 'Digit2',\n        class: '',\n    },\n    {\n        small: '3',\n        shift: '№',\n        code: 'Digit3',\n        class: '',\n    },\n    {\n        small: '4',\n        shift: ';',\n        code: 'Digit4',\n        class: '',\n    },\n    {\n        small: '5',\n        shift: '%',\n        code: 'Digit5',\n        class: '',\n    },\n    {\n        small: '6',\n        shift: ':',\n        code: 'Digit6',\n        class: '',\n    },\n    {\n        small: '7',\n        shift: '?',\n        code: 'Digit7',\n        class: '',\n    },\n    {\n        small: '8',\n        shift: '*',\n        code: 'Digit8',\n        class: '',\n    },\n    {\n        small: '9',\n        shift: '(',\n        code: 'Digit9',\n        class: '',\n    },\n    {\n        small: '0',\n        shift: ')',\n        code: 'Digit0',\n        class: '',\n    },\n    {\n        small: '-',\n        shift: '_',\n        code: 'Minus',\n        class: '',\n    },\n    {\n        small: '=',\n        shift: '+',\n        code: 'Equal',\n        class: '',\n    },\n    {\n        small: 'Backspace',\n        shift: 'Backspace',\n        code: 'Backspace',\n        class: 'button__backspace',\n    },\n    {\n        small: 'Tab',\n        shift: 'Tab',\n        code: 'Tab',\n        class: 'button__tab',\n    },\n    {\n        small: 'й',\n        shift: 'Й',\n        code: 'KeyQ',\n        class: '',\n    },\n    {\n        small: 'ц',\n        shift: 'Ц',\n        code: 'KeyW',\n        class: '',\n    },\n    {\n        small: 'у',\n        shift: 'У',\n        code: 'KeyE',\n        class: '',\n    },\n    {\n        small: 'к',\n        shift: 'К',\n        code: 'KeyR',\n        class: '',\n    },\n    {\n        small: 'е',\n        shift: 'Е',\n        code: 'KeyT',\n        class: '',\n    },\n    {\n        small: 'н',\n        shift: 'Н',\n        code: 'KeyY',\n        class: '',\n    },\n    {\n        small: 'г',\n        shift: 'Г',\n        code: 'KeyU',\n        class: '',\n    },\n    {\n        small: 'ш',\n        shift: 'Ш',\n        code: 'KeyI',\n        class: '',\n    },\n    {\n        small: 'щ',\n        shift: 'Щ',\n        code: 'KeyO',\n        class: '',\n    },\n    {\n        small: 'з',\n        shift: 'З',\n        code: 'KeyP',\n        class: '',\n    },\n    {\n        small: 'х',\n        shift: 'Х',\n        code: 'BracketLeft',\n        class: '',\n    },\n    {\n        small: 'ъ',\n        shift: 'Ъ',\n        code: 'BracketRight',\n        class: '',\n    },\n    {\n        small: '\\\\',\n        shift: '|',\n        code: 'Backslash',\n        class: '',\n    },\n    {\n        small: 'Delete',\n        shift: 'Delete',\n        code: 'Delete',\n        class: '',\n    },\n    {\n        small: 'CapsLock',\n        shift: 'CapsLock',\n        code: 'CapsLock',\n        class: 'button__caps',\n    },\n\n    {\n        small: 'ф',\n        shift: 'Ф',\n        code: 'KeyA',\n        class: '',\n    },\n    {\n        small: 'ы',\n        shift: 'Ы',\n        code: 'KeyS',\n        class: '',\n    },\n    {\n        small: 'в',\n        shift: 'В',\n        code: 'KeyD',\n        class: '',\n    },\n    {\n        small: 'а',\n        shift: 'А',\n        code: 'KeyF',\n        class: '',\n    },\n    {\n        small: 'п',\n        shift: 'П',\n        code: 'KeyG',\n        class: '',\n    },\n    {\n        small: 'р',\n        shift: 'Р',\n        code: 'KeyH',\n        class: '',\n    },\n    {\n        small: 'о',\n        shift: 'О',\n        code: 'KeyJ',\n        class: '',\n    },\n    {\n        small: 'л',\n        shift: 'Л',\n        code: 'KeyK',\n        class: '',\n    },\n    {\n        small: 'д',\n        shift: 'Д',\n        code: 'KeyL',\n        class: '',\n    },\n    {\n        small: 'ж',\n        shift: 'Ж',\n        code: 'Semicolon',\n        class: '',\n    },\n    {\n        small: 'э',\n        shift: 'Э',\n        code: 'Quote',\n        class: '',\n    },\n    {\n        small: 'Enter',\n        shift: 'Enter',\n        code: 'Enter',\n        class: 'button__enter',\n    },\n    {\n        small: 'Shift',\n        shift: 'Shift',\n        code: 'ShiftLeft',\n        class: 'button__shift',\n    },\n    {\n        small: '/',\n        shift: '|',\n        code: 'IntlBackslash',\n        class: '',\n    },\n    {\n        small: 'я',\n        shift: 'Я',\n        code: 'KeyZ',\n        class: '',\n    },\n    {\n        small: 'ч',\n        shift: 'Ч',\n        code: 'KeyX',\n        class: '',\n    },\n    {\n        small: 'с',\n        shift: 'С',\n        code: 'KeyC',\n        class: '',\n    },\n    {\n        small: 'м',\n        shift: 'М',\n        code: 'KeyV',\n        class: '',\n    },\n    {\n        small: 'и',\n        shift: 'И',\n        code: 'KeyB',\n        class: '',\n    },\n    {\n        small: 'т',\n        shift: 'Т',\n        code: 'KeyN',\n        class: '',\n    },\n    {\n        small: 'ь',\n        shift: 'Ь',\n        code: 'KeyM',\n        class: '',\n    },\n    {\n        small: 'б',\n        shift: 'Б',\n        code: 'Comma',\n        class: '',\n    },\n    {\n        small: 'ю',\n        shift: 'Ю',\n        code: 'Period',\n        class: '',\n    },\n    {\n        small: '.',\n        shift: ',',\n        code: 'Slash',\n        class: '',\n    },\n    {\n        small: '&#9650;',\n        shift: '&#9650;',\n        code: 'ArrowUp',\n        class: '',\n    },\n    {\n        small: 'Shift',\n        shift: 'Shift',\n        code: 'ShiftRight',\n        class: '',\n    },\n    {\n        small: 'Ctrl',\n        shift: 'Ctrl',\n        code: 'ControlLeft',\n        class: 'button__ctrl',\n    },\n    {\n        small: 'RU',\n        shift: 'RU',\n        code: 'lang',\n        class: '',\n    },\n    {\n        small: 'Alt',\n        shift: 'Alt',\n        code: 'AltLeft',\n        class: '',\n    },\n    {\n        small: '&#8212;',\n        shift: '&#8212;',\n        code: 'Space',\n        class: 'button__space',\n    },\n    {\n        small: 'Alt',\n        shift: 'Alt',\n        code: 'AltRight',\n        class: '',\n    },\n    {\n        small: 'Ctrl',\n        shift: 'Ctrl',\n        code: 'ControlRight',\n        class: 'button__ctrl',\n    },\n    {\n        small: '&#9668;',\n        shift: '&#9668;',\n        code: 'ArrowLeft',\n        class: '',\n    },\n\n    {\n        small: '&#9660;',\n        shift: '&#9660;',\n        code: 'ArrowDown',\n        class: '',\n    },\n    {\n        small: '&#9658;',\n        shift: '&#9658;',\n        code: 'ArrowRight',\n        class: '',\n    },\n]);\n\n//# sourceURL=webpack://virtual-keyboard/./src/jsLang/ru.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;